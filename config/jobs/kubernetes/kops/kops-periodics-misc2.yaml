# Test jobs generated by build_jobs.py (do not manually edit)
# 31 jobs, total of 1008 runs per week
periodics:

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-scenario-gcr-mirror
  cron: '11 0-23/1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-1.23, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '11'
    testgrid-tab-name: kops-scenario-gcr-mirror

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-artifacts-sandbox
  cron: '1 0-23/1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/smoketest/run-test.sh
      env:
      - name: KOPS_BASE_URL
        value: "https://artifacts-sandbox.k8s.io/binaries/kops/1.26.0-beta.2/"
      - name: KOPS_VERSION
        value: "v1.26.0-beta.2"
      - name: K8S_VERSION
        value: "v1.25.0"
      - name: KOPS_SKIP_E2E
        value: "1"
      - name: KOPS_CONTROL_PLANE_SIZE
        value: "3"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-622a77307c-4bdbd.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '11'
    testgrid-tab-name: kops-artifacts-sandbox

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-scenario-arm64
  cron: '2 17-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-scenario-arm64

# {"cloud": "aws", "distro": "deb11", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-cni-calico-deb11
  cron: '59 5-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-11-amd64-20230601-1398' --channel=alpha --networking=calico --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb11
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb11, kops-k8s-ci, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-calico-deb11

# {"cloud": "aws", "distro": "flatcararm64", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-cni-calico-flatcar
  cron: '40 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-arm64-hvm' --channel=alpha --networking=calico --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcararm64
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-distros, kops-k8s-ci, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-calico-flatcar

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--ipv6 --topology=private --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-cni-calico-ipv6
  cron: '29 0-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=calico --ipv6 --topology=private --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-ipv6, kops-k8s-ci, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-calico-ipv6

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--ipv6 --topology=private --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-cni-cilium-ipv6
  cron: '22 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --ipv6 --topology=private --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-ipv6, kops-k8s-ci, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-cilium-ipv6

# {"cloud": "aws", "distro": "flatcararm64", "extra_flags": "--ipv6 --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-ipv6-flatcar
  cron: '41 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-arm64-hvm' --channel=alpha --networking=cilium --ipv6 --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcararm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-distros, kops-ipv6, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-ipv6-flatcar

# {"cloud": "aws", "distro": "flatcararm64", "extra_flags": "--ipv6 --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-cni-calico-ipv6-flatcar
  cron: '52 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-arm64-hvm' --channel=alpha --networking=calico --ipv6 --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcararm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-distros, kops-ipv6, kops-k8s-ci, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-calico-ipv6-flatcar

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--api-loadbalancer-type=public", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-scenario-no-irsa
  cron: '37 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --api-loadbalancer-type=public" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --api-loadbalancer-type=public
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-scenario-no-irsa

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--api-loadbalancer-type=public --set=cluster.spec.cloudProvider.aws.warmPool.minSize=1 --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-warm-pool
  cron: '54 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --api-loadbalancer-type=public --set=cluster.spec.cloudProvider.aws.warmPool.minSize=1 --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --api-loadbalancer-type=public --set=cluster.spec.cloudProvider.aws.warmPool.minSize=1 --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-warm-pool

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-private
  cron: '24 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=calico --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-private

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--zones=us-west-1a --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-scenario-terraform
  cron: '5 13-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --zones=us-west-1a --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --terraform-version=1.0.5 \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --zones=us-west-1a --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-scenario-terraform

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--ipv6 --topology=private --bastion --zones=us-west-1a --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-scenario-ipv6-terraform
  cron: '17 23-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --ipv6 --topology=private --bastion --zones=us-west-1a --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --terraform-version=1.0.5 \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --bastion --zones=us-west-1a --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-ipv6, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-scenario-ipv6-terraform

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--master-count=3 --zones=eu-west-1a,eu-west-1b,eu-west-1c --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-ha-euwest1
  cron: '10 5-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=calico --master-count=3 --zones=eu-west-1a,eu-west-1b,eu-west-1c --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --master-count=3 --zones=eu-west-1a,eu-west-1b,eu-west-1c --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-ha-euwest1

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-arm64-release
  cron: '44 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=calico --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-arm64-release

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-arm64-ci
  cron: '59 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=calico --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-arm64-ci

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-arm64-conformance
  cron: '5 7-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=calico --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --skip-regex="\[Slow\]|\[Serial\]|\[Flaky\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-arm64-conformance

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=c5.large --master-size=c5.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-amd64-conformance
  cron: '18 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico --node-size=c5.large --master-size=c5.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --skip-regex="\[Slow\]|\[Serial\]|\[Flaky\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=c5.large --master-size=c5.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-amd64-conformance

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-updown
  cron: '13 0-23/1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=calico --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci.txt \
          --publish-version-marker=gs://kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --focus-regex="\[k8s.io\]\sNetworking.*\[Conformance\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '11'
    testgrid-tab-name: kops-aws-updown

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-aws-load-balancer-controller
  cron: '37 5-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/aws-lb-controller/run-test.sh
      env:
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-4342699135-9b4dd.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-aws-load-balancer-controller

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-keypair-rotation-ha
  cron: '26 12-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 270m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/keypair-rotation/run-test.sh
      env:
      - name: KOPS_CONTROL_PLANE_SIZE
        value: "3"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-349a115d39-16181.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-keypair-rotation-ha

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-metrics-server
  cron: '42 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/metrics-server/run-test.sh
      env:
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-127cbce38e-b114d.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-metrics-server

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-pod-identity-webhook
  cron: '50 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/podidentitywebhook/run-test.sh
      env:
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-49d63c55eb-ac683.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-pod-identity-webhook

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-addon-resource-tracking
  cron: '43 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/addon-resource-tracking/run-test.sh
      env:
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-c0d41e2af2-13250.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-addon-resource-tracking

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--set=cluster.spec.externalDNS.provider=external-dns --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-external-dns
  cron: '25 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --set=cluster.spec.externalDNS.provider=external-dns --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --set=cluster.spec.externalDNS.provider=external-dns --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-external-dns

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--ipv6 --bastion --set=cluster.spec.externalDNS.provider=external-dns --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-ipv6-external-dns
  cron: '55 5-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --ipv6 --bastion --set=cluster.spec.externalDNS.provider=external-dns --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --ipv6 --bastion --set=cluster.spec.externalDNS.provider=external-dns --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-ipv6, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-ipv6-external-dns

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "APIServerNodes", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-apiserver-nodes
  cron: '19 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --discovery-store=s3://k8s-kops-prow/discovery" \
          --env=KOPS_FEATURE_FLAGS=APIServerNodes \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --template-path=/home/prow/go/src/k8s.io/kops/tests/e2e/templates/apiserver.yaml.tmpl \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/feature_flags: APIServerNodes
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-apiserver-nodes

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--instance-manager=karpenter --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "Karpenter", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-karpenter
  cron: '14 16-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --instance-manager=karpenter --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery" \
          --env=KOPS_FEATURE_FLAGS=Karpenter \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|nfs|NFS|Gluster|Services.*rejected.*endpoints|TCP.CLOSE_WAIT|external.IP.is.not.assigned.to.a.node|same.port.number.but.different.protocols|same.hostPort.but.different.hostIP.and.protocol|should.create.a.Pod.with.SCTP.HostPort|Services.should.create.endpoints.for.unready.pods|Services.should.be.able.to.connect.to.terminating.and.unready.endpoints.if.PublishNotReadyAddresses.is.true|should.verify.that.all.nodes.have.volume.limits|In-tree.Volumes|LoadBalancers.should.be.able.to.preserve.UDP.traffic|serve.endpoints.on.same.port.and.different.protocols" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --instance-manager=karpenter --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/feature_flags: Karpenter
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-karpenter

# {"cloud": "aws", "distro": "u2204arm64", "extra_flags": "--instance-manager=karpenter --ipv6 --topology=private --bastion --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "Karpenter", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-ipv6-karpenter
  cron: '55 7-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230623' --channel=alpha --networking=cilium --instance-manager=karpenter --ipv6 --topology=private --bastion --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery" \
          --env=KOPS_FEATURE_FLAGS=Karpenter \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|nfs|NFS|Gluster|Services.*rejected.*endpoints|TCP.CLOSE_WAIT|external.IP.is.not.assigned.to.a.node|same.port.number.but.different.protocols|same.hostPort.but.different.hostIP.and.protocol|should.create.a.Pod.with.SCTP.HostPort|Services.should.create.endpoints.for.unready.pods|Services.should.be.able.to.connect.to.terminating.and.unready.endpoints.if.PublishNotReadyAddresses.is.true|should.verify.that.all.nodes.have.volume.limits|In-tree.Volumes|LoadBalancers.should.be.able.to.preserve.UDP.traffic|serve.endpoints.on.same.port.and.different.protocols" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204arm64
    test.kops.k8s.io/extra_flags: --instance-manager=karpenter --ipv6 --topology=private --bastion --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/feature_flags: Karpenter
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-ipv6, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-ipv6-karpenter

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--kubernetes-feature-gates=SELinuxMountReadWriteOncePod,ReadWriteOncePod --set=cluster.spec.containerd.selinuxEnabled=true --discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "SELinuxMount", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-selinux
  cron: '38 1-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 150m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium --kubernetes-feature-gates=SELinuxMountReadWriteOncePod,ReadWriteOncePod --set=cluster.spec.containerd.selinuxEnabled=true --discovery-store=s3://k8s-kops-prow/discovery" \
          --env=KOPS_FEATURE_FLAGS=SELinuxMount \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=120m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Feature:SELinux\]" \
          --skip-regex="\[Feature:Volumes\]|\[Driver:.nfs\]|\[Driver:.local\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --kubernetes-feature-gates=SELinuxMountReadWriteOncePod,ReadWriteOncePod --set=cluster.spec.containerd.selinuxEnabled=true --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/feature_flags: SELinuxMount
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-selinux
