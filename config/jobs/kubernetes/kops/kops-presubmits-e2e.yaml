# Test jobs generated by build_jobs.py (do not manually edit)
# 37 jobs
presubmits:
  kubernetes/kops:

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-ci
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-bucket=k8s-release-dev \
            --test-package-dir=ci \
            --test-package-marker=latest.txt \
            --focus-regex="\[Conformance\]|\[NodeConformance\]" \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: ci
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-containerd-ci

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--master-count=3 --node-count=6 --zones=eu-central-1a,eu-central-1b,eu-central-1c --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-ci-ha
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --master-count=3 --node-count=6 --zones=eu-central-1a,eu-central-1b,eu-central-1c --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-bucket=k8s-release-dev \
            --test-package-dir=ci \
            --test-package-marker=latest.txt \
            --focus-regex="\[Conformance\]|\[NodeConformance\]" \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --master-count=3 --node-count=6 --zones=eu-central-1a,eu-central-1b,eu-central-1c --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: ci
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-containerd-ci-ha

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204arm64", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-k8s-docker
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=cilium --container-runtime=docker --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: docker
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-docker

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-aws-calico
    branches:
    - master
    always_run: true
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-aws-calico

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--gce-service-account=default", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-k8s-gce-cilium
    branches:
    - master
    always_run: true
    optional: false
    skip_report: false
    labels:
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=gce \
            --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/ssh-key-secret/ssh-private
        - name: KUBE_SSH_USER
          value: prow
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: gce
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --gce-service-account=default
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-gce-cilium

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--gce-service-account=default", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium-etcd"}
  - name: pull-kops-e2e-k8s-gce-cilium-etcd
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=gce \
            --create-args="--channel=alpha --networking=cilium-etcd --container-runtime=containerd --gce-service-account=default" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/ssh-key-secret/ssh-private
        - name: KUBE_SSH_USER
          value: prow
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: gce
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --gce-service-account=default
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium-etcd
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-gce-cilium-etcd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--gce-service-account=default", "k8s_version": "stable", "kops_channel": "alpha", "networking": "gce"}
  - name: pull-kops-e2e-k8s-gce-ipalias
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=gce \
            --create-args="--channel=alpha --networking=gce --container-runtime=containerd --gce-service-account=default" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/ssh-key-secret/ssh-private
        - name: KUBE_SSH_USER
          value: prow
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: gce
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --gce-service-account=default
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: gce
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-gce

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--gce-service-account=default", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-k8s-gce-long-cluster-name
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=gce \
            --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/ssh-key-secret/ssh-private
        - name: KUBE_SSH_USER
          value: prow
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: gce
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --gce-service-account=default
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-gce-long-name

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--gce-service-account=default", "k8s_version": "ci", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-k8s-gce-ci
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=gce \
            --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
            --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-bucket=k8s-release-dev \
            --test-package-dir=ci \
            --test-package-marker=latest.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/ssh-key-secret/ssh-private
        - name: KUBE_SSH_USER
          value: prow
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: gce
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --gce-service-account=default
      test.kops.k8s.io/k8s_version: ci
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-gce-ci

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--gce-service-account=default", "feature_flags": "GoogleCloudBucketACL", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-gce-calico-u2004-k22-containerd
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=gce \
            --create-args="--channel=alpha --networking=calico --container-runtime=containerd --gce-service-account=default" \
            --env=KOPS_FEATURE_FLAGS=GoogleCloudBucketACL \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/ssh-key-secret/ssh-private
        - name: KUBE_SSH_USER
          value: prow
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: gce
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --gce-service-account=default
      test.kops.k8s.io/feature_flags: GoogleCloudBucketACL
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-k8s-gce-calico-u2004-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--set=cluster.spec.cloudControllerManager.cloudProvider=aws --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-cloud-controller-manager
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230213' --channel=alpha --networking=cilium --container-runtime=containerd --set=cluster.spec.cloudControllerManager.cloudProvider=aws --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-bucket=k8s-release-dev \
            --test-package-dir=ci \
            --test-package-marker=latest.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/extra_flags: --set=cluster.spec.cloudControllerManager.cloudProvider=aws --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: ci
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-ccm

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-aws-load-balancer-controller
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    max_concurrency: 1
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./tests/e2e/scenarios/aws-lb-controller/run-test.sh
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        - name: CLOUD_PROVIDER
          value: "aws"
        - name: CLUSTER_NAME
          value: "e2e-93386f3fd4-07e7d.test-cncf-aws.k8s.io"
        - name: KOPS_STATE_STORE
          value: "s3://k8s-kops-prow"
        - name: KOPS_IRSA
          value: "true"
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-load-balancer-controller

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-addon-resource-tracking
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    max_concurrency: 1
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./tests/e2e/scenarios/addon-resource-tracking/run-test.sh
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        - name: CLOUD_PROVIDER
          value: "aws"
        - name: CLUSTER_NAME
          value: "e2e-4422271282-77011.test-cncf-aws.k8s.io"
        - name: KOPS_STATE_STORE
          value: "s3://k8s-kops-prow"
        - name: KOPS_IRSA
          value: "true"
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-addon-resource-tracking

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-metrics-server
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    max_concurrency: 1
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./tests/e2e/scenarios/metrics-server/run-test.sh
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        - name: CLOUD_PROVIDER
          value: "aws"
        - name: CLUSTER_NAME
          value: "e2e-12ade267b4-0e701.test-cncf-aws.k8s.io"
        - name: KOPS_STATE_STORE
          value: "s3://k8s-kops-prow"
        - name: KOPS_IRSA
          value: "true"
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-metrics-server

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-pod-identity-webhook
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    max_concurrency: 1
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./tests/e2e/scenarios/podidentitywebhook/run-test.sh
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        - name: CLOUD_PROVIDER
          value: "aws"
        - name: CLUSTER_NAME
          value: "e2e-8851f75f16-e46fe.test-cncf-aws.k8s.io"
        - name: KOPS_STATE_STORE
          value: "s3://k8s-kops-prow"
        - name: KOPS_IRSA
          value: "true"
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-pod-identity-webhook

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--set=cluster.spec.externalDNS.provider=external-dns --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-aws-external-dns
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --set=cluster.spec.externalDNS.provider=external-dns --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --set=cluster.spec.externalDNS.provider=external-dns --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-external-dns

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--set=cluster.spec.kubeDNS.nodeLocalDNS.enabled=true --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-node-local-dns
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=cilium --container-runtime=containerd --set=cluster.spec.kubeDNS.nodeLocalDNS.enabled=true --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --set=cluster.spec.kubeDNS.nodeLocalDNS.enabled=true --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-node-local-dns

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "APIServerNodes", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-apiserver-nodes
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=cilium --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --env=KOPS_FEATURE_FLAGS=APIServerNodes \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --template-path=/home/prow/go/src/k8s.io/kops/tests/e2e/templates/apiserver.yaml.tmpl \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/feature_flags: APIServerNodes
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-apiserver-nodes

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-arm64
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-arm64

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--dns=none --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-aws-dns-none
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --dns=none --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --dns=none --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-dns-none

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--dns=none --gce-service-account=default", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-gce-dns-none
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=gce \
            --create-args="--channel=alpha --networking=calico --container-runtime=containerd --dns=none --gce-service-account=default" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/ssh-key-secret/ssh-private
        - name: KUBE_SSH_USER
          value: prow
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: gce
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --dns=none --gce-service-account=default
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-gce-dns-none

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--api-loadbalancer-type=public --api-loadbalancer-class=network --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-aws-nlb
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --api-loadbalancer-type=public --api-loadbalancer-class=network --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --api-loadbalancer-type=public --api-loadbalancer-class=network --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-nlb

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-terraform
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=cilium --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --terraform-version=1.0.5 \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-terraform

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--ipv6 --bastion --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-ipv6-terraform
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=cilium --container-runtime=containerd --ipv6 --bastion --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --terraform-version=1.0.5 \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --ipv6 --bastion --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-ipv6-terraform

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.24", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-latest-e2e-aws-k8s-1-24
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.24.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: '1.24'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-aws-1-24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--set=cluster.spec.cloudControllerManager.cloudProvider=aws --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.23", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-latest-e2e-aws-k8s-1-23
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --set=cluster.spec.cloudControllerManager.cloudProvider=aws --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.23.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --set=cluster.spec.cloudControllerManager.cloudProvider=aws --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: '1.23'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-aws-1-23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--set=cluster.spec.cloudControllerManager.cloudProvider=aws --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.22", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-latest-e2e-aws-k8s-1-22
    branches:
    - master
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --set=cluster.spec.cloudControllerManager.cloudProvider=aws --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.22.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --set=cluster.spec.cloudControllerManager.cloudProvider=aws --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: '1.22'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-aws-1-22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.26", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-aws-calico-1-26
    branches:
    - release-1.26
    always_run: true
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.26.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.26.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: '1.26'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-1-26

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.25", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-aws-calico-1-25
    branches:
    - release-1.25
    always_run: true
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.25.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: '1.25'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-1-25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.24", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-aws-calico-1-24
    branches:
    - release-1.24
    always_run: true
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.24.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: '1.24'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-1-24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.23", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-aws-calico-1-23
    branches:
    - release-1.23
    always_run: true
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.23.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: '1.23'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-1-23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.22", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-aws-calico-1-22
    branches:
    - release-1.22
    always_run: true
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230216' --channel=alpha --networking=calico --container-runtime=containerd --discovery-store=s3://k8s-kops-prow/discovery" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.22.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204
      test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/k8s_version: '1.22'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-1-22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--instance-manager=karpenter --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "Karpenter", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-karpenter
    branches:
    - master
    run_if_changed: '^upup\/models\/cloudup\/resources\/addons\/karpenter\.sh\/'
    always_run: false
    optional: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-arm64-server-20230216' --channel=alpha --networking=cilium --container-runtime=containerd --instance-manager=karpenter --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery" \
            --env=KOPS_FEATURE_FLAGS=Karpenter \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/.build/dist/linux/amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable.txt \
            --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|nfs|NFS|Gluster|Services.*rejected.*endpoints|TCP.CLOSE_WAIT|external.IP.is.not.assigned.to.a.node|same.port.number.but.different.protocols|same.hostPort.but.different.hostIP.and.protocol|should.create.a.Pod.with.SCTP.HostPort|Services.should.create.endpoints.for.unready.pods|Services.should.be.able.to.connect.to.terminating.and.unready.endpoints.if.PublishNotReadyAddresses.is.true|should.verify.that.all.nodes.have.volume.limits|In-tree.Volumes|LoadBalancers.should.be.able.to.preserve.UDP.traffic" \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --instance-manager=karpenter --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery
      test.kops.k8s.io/feature_flags: Karpenter
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-karpenter

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-upgrade-k124-ko124-to-k125-kolatest
    branches:
    - master
    always_run: false
    optional: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    max_concurrency: 1
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./tests/e2e/scenarios/upgrade-ab/run-test.sh
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        - name: KOPS_VERSION_A
          value: "1.24"
        - name: K8S_VERSION_A
          value: "v1.24.0"
        - name: KOPS_VERSION_B
          value: "latest"
        - name: K8S_VERSION_B
          value: "1.25.0"
        - name: CLOUD_PROVIDER
          value: "aws"
        - name: CLUSTER_NAME
          value: "e2e-5cfd5037f5-d5d2c.test-cncf-aws.k8s.io"
        - name: KOPS_STATE_STORE
          value: "s3://k8s-kops-prow"
        - name: KOPS_IRSA
          value: "true"
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-upgrade-k124-ko124-to-k125-kolatest

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-upgrade-k125-kolatest-to-k126-kolatest
    branches:
    - master
    always_run: false
    optional: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    max_concurrency: 1
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./tests/e2e/scenarios/upgrade-ab/run-test.sh
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        - name: KOPS_VERSION_A
          value: "latest"
        - name: K8S_VERSION_A
          value: "v1.25.0"
        - name: KOPS_VERSION_B
          value: "latest"
        - name: K8S_VERSION_B
          value: "v1.26.0"
        - name: KOPS_SKIP_E2E
          value: "1"
        - name: KOPS_TEMPLATE
          value: "tests/e2e/templates/many-addons.yaml.tmpl"
        - name: KOPS_CONTROL_PLANE_SIZE
          value: "3"
        - name: CLOUD_PROVIDER
          value: "aws"
        - name: CLUSTER_NAME
          value: "e2e-e6b1dc7f49-9f9f5.test-cncf-aws.k8s.io"
        - name: KOPS_STATE_STORE
          value: "s3://k8s-kops-prow"
        - name: KOPS_IRSA
          value: "true"
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-upgrade-k125-kolatest-to-k126-kolatest

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-upgrade-126-ko126-to-klatest-kolatest-many-addons
    branches:
    - master
    run_if_changed: '^upup\/(models\/cloudup\/resources\/addons\/|pkg\/fi\/cloudup\/bootstrapchannelbuilder\/)'
    always_run: false
    optional: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    max_concurrency: 1
    decorate: true
    decoration_config:
      timeout: 150m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./tests/e2e/scenarios/upgrade-ab/run-test.sh
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        - name: KOPS_VERSION_A
          value: "1.26"
        - name: K8S_VERSION_A
          value: "v1.26.0"
        - name: KOPS_VERSION_B
          value: "latest"
        - name: K8S_VERSION_B
          value: "latest"
        - name: KOPS_SKIP_E2E
          value: "1"
        - name: KOPS_TEMPLATE
          value: "tests/e2e/templates/many-addons.yaml.tmpl"
        - name: KOPS_CONTROL_PLANE_SIZE
          value: "3"
        - name: CLOUD_PROVIDER
          value: "aws"
        - name: CLUSTER_NAME
          value: "e2e-7c187fd25f-bb719.test-cncf-aws.k8s.io"
        - name: KOPS_STATE_STORE
          value: "s3://k8s-kops-prow"
        - name: KOPS_IRSA
          value: "true"
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-upgrade-126-ko126-to-klatest-kolatest-many-addons

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204arm64", "extra_flags": "--instance-manager=karpenter --master-size=c6g.xlarge", "feature_flags": "Karpenter", "k8s_version": "stable", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-aws-upgrade-k123-ko125-to-k124-kolatest-karpenter
    branches:
    - master
    run_if_changed: '^upup\/models\/cloudup\/resources\/addons\/karpenter\.sh\/'
    always_run: false
    optional: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
    max_concurrency: 1
    decorate: true
    decoration_config:
      timeout: 150m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230222-b5208facd4-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./tests/e2e/scenarios/upgrade-ab/run-test.sh
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        - name: KOPS_VERSION_A
          value: "1.25"
        - name: K8S_VERSION_A
          value: "v1.23.0"
        - name: KOPS_VERSION_B
          value: "latest"
        - name: K8S_VERSION_B
          value: "v1.24.0"
        - name: KOPS_SKIP_E2E
          value: "1"
        - name: KOPS_CONTROL_PLANE_SIZE
          value: "3"
        - name: CLOUD_PROVIDER
          value: "aws"
        - name: CLUSTER_NAME
          value: "e2e-e0f2048229-326c9.test-cncf-aws.k8s.io"
        - name: KOPS_STATE_STORE
          value: "s3://k8s-kops-prow"
        - name: KOPS_EXTRA_FLAGS
          value: "--instance-manager=karpenter --master-size=c6g.xlarge"
        - name: KOPS_IRSA
          value: "true"
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2204arm64
      test.kops.k8s.io/extra_flags: --instance-manager=karpenter --master-size=c6g.xlarge
      test.kops.k8s.io/feature_flags: Karpenter
      test.kops.k8s.io/k8s_version: stable
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: pull-kops-e2e-aws-upgrade-k123-ko125-to-k124-kolatest-karpenter
