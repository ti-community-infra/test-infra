# Test jobs generated by build_jobs.py (do not manually edit)
# 594 jobs, total of 1582 runs per week
periodics:

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k23
  cron: '25 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k23

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k23-ko26
  cron: '14 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k23-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k23-ko27
  cron: '44 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k23-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k24
  cron: '58 12 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k24

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k24-ko26
  cron: '34 21 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k24-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k24-ko27
  cron: '48 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k24-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k25
  cron: '36 18 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k25

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k25-ko26
  cron: '11 16 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k25-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k25-ko27
  cron: '17 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k25-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k26
  cron: '18 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k26-ko26
  cron: '5 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k26-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k26-ko27
  cron: '11 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k26-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k27
  cron: '20 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-amzn2-k27-ko27
  cron: '10 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-amzn2-k27-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k23
  cron: '52 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k23

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k23-ko26
  cron: '55 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k23-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k23-ko27
  cron: '25 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k23-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k24
  cron: '7 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k24

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k24-ko26
  cron: '43 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k24-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k24-ko27
  cron: '5 22 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k24-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k25
  cron: '5 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k25

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k25-ko26
  cron: '38 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k25-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k25-ko27
  cron: '24 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k25-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k26
  cron: '39 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k26-ko26
  cron: '56 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k26-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k26-ko27
  cron: '14 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k26-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k27
  cron: '21 23 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-deb10-k27-ko27
  cron: '59 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-deb10-k27-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k23
  cron: '57 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k23

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k23-ko26
  cron: '40 19 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k23-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k23-ko27
  cron: '10 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k23-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k24
  cron: '30 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k24

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k24-ko26
  cron: '4 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k24-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k24-ko27
  cron: '42 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k24-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k25
  cron: '36 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k25

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k25-ko26
  cron: '17 22 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k25-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k25-ko27
  cron: '19 0 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k25-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k26
  cron: '26 22 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k26-ko26
  cron: '19 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k26-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k26-ko27
  cron: '17 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k26-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k27
  cron: '0 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-flatcar-k27-ko27
  cron: '12 3 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-flatcar-k27-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k23
  cron: '40 10 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k23

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k23-ko26
  cron: '7 4 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k23-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k23-ko27
  cron: '33 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k23-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k24
  cron: '55 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k24

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k24-ko26
  cron: '31 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k24-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k24-ko27
  cron: '41 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k24-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k25
  cron: '33 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k25

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k25-ko26
  cron: '38 17 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k25-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k25-ko27
  cron: '52 7 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k25-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k26
  cron: '43 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k26-ko26
  cron: '44 15 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k26-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k26-ko27
  cron: '22 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k26-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k27
  cron: '49 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-rhel8-k27-ko27
  cron: '3 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-rhel8-k27-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k23
  cron: '30 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k23

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k23-ko26
  cron: '9 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k23-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k23-ko27
  cron: '59 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k23-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k24
  cron: '9 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k24

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k24-ko26
  cron: '1 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k24-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k24-ko27
  cron: '3 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k24-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k25
  cron: '27 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k25

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k25-ko26
  cron: '28 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k25-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k25-ko27
  cron: '54 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k25-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k26
  cron: '25 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k26-ko26
  cron: '34 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k26-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k26-ko27
  cron: '4 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k26-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k27
  cron: '59 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2004-k27-ko27
  cron: '45 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2004-k27-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k23
  cron: '51 1 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k23

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k23-ko26
  cron: '42 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k23-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k23-ko27
  cron: '56 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k23-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k24
  cron: '32 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k24

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k24-ko26
  cron: '54 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k24-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k24-ko27
  cron: '40 11 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k24-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k25
  cron: '58 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k25

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k25-ko26
  cron: '3 16 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k25-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k25-ko27
  cron: '45 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k25-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k26
  cron: '16 22 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k26-ko26
  cron: '53 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k26-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k26-ko27
  cron: '15 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k26-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k27
  cron: '42 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kubenet"}
- name: e2e-kops-grid-kubenet-u2204-k27-ko27
  cron: '54 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kubenet" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kubenet-u2204-k27-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23
  cron: '46 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko26
  cron: '29 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko27
  cron: '19 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k24
  cron: '49 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k24

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k24-ko26
  cron: '29 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k24-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k24-ko27
  cron: '55 16 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k24-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k25
  cron: '31 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k25

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k25-ko26
  cron: '48 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k25-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k25-ko27
  cron: '54 21 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k25-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k26
  cron: '25 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k26-ko26
  cron: '38 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k26-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k26-ko27
  cron: '20 11 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k26-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k27
  cron: '35 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k27-ko27
  cron: '49 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k27-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23
  cron: '3 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko26
  cron: '40 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko27
  cron: '58 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k24
  cron: '4 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k24

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k24-ko26
  cron: '40 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k24-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k24-ko27
  cron: '30 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k24-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k25
  cron: '30 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k25

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k25-ko26
  cron: '45 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k25-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k25-ko27
  cron: '39 0 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k25-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k26
  cron: '16 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k26-ko26
  cron: '39 0 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k26-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k26-ko27
  cron: '41 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k26-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k27
  cron: '50 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k27-ko27
  cron: '20 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k27-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23
  cron: '20 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko26
  cron: '20 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko27
  cron: '2 18 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k24
  cron: '19 17 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k24

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k24-ko26
  cron: '52 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k24-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k24-ko27
  cron: '34 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k24-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k25
  cron: '45 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k25

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k25-ko26
  cron: '29 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k25-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k25-ko27
  cron: '19 15 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k25-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k26
  cron: '3 13 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k26-ko26
  cron: '59 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k26-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k26-ko27
  cron: '5 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k26-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k27
  cron: '45 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k27-ko27
  cron: '16 20 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k27-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23
  cron: '47 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko26
  cron: '32 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko27
  cron: '22 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k24
  cron: '48 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k24

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k24-ko26
  cron: '24 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k24-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k24-ko27
  cron: '58 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k24-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k25
  cron: '34 16 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k25

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k25-ko26
  cron: '21 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k25-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k25-ko27
  cron: '15 12 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k25-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k26
  cron: '28 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k26-ko26
  cron: '59 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k26-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k26-ko27
  cron: '57 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k26-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k27
  cron: '38 20 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k27-ko27
  cron: '44 15 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k27-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23
  cron: '5 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko26
  cron: '46 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko27
  cron: '40 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k24
  cron: '2 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k24

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k24-ko26
  cron: '46 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k24-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k24-ko27
  cron: '44 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k24-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k25
  cron: '0 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k25

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k25-ko26
  cron: '47 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k25-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k25-ko27
  cron: '57 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k25-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k26
  cron: '18 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k26-ko26
  cron: '25 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k26-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k26-ko27
  cron: '3 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k26-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k27
  cron: '8 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k27-ko27
  cron: '22 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k27-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23
  cron: '48 6 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko26
  cron: '9 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko27
  cron: '11 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k24
  cron: '43 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k24

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k24-ko26
  cron: '13 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k24-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k24-ko27
  cron: '11 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k24-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k25
  cron: '25 3 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k25

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k25-ko26
  cron: '28 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k25-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k25-ko27
  cron: '10 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k25-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k26
  cron: '3 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k26-ko26
  cron: '22 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k26-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k26-ko27
  cron: '52 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k26-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k27
  cron: '53 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k27-ko27
  cron: '21 6 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=calico" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k27-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23
  cron: '28 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko26
  cron: '21 10 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko27
  cron: '47 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k24
  cron: '59 1 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k24

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k24-ko26
  cron: '41 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k24-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k24-ko27
  cron: '23 20 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k24-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k25
  cron: '41 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k25

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k25-ko26
  cron: '44 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k25-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k25-ko27
  cron: '34 1 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k25-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k26
  cron: '27 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k26-ko26
  cron: '34 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k26-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k26-ko27
  cron: '32 7 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k26-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k27
  cron: '25 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k27-ko27
  cron: '45 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k27-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23
  cron: '17 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko26
  cron: '20 15 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko27
  cron: '2 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k24
  cron: '22 8 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k24

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k24-ko26
  cron: '52 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k24-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k24-ko27
  cron: '26 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k24-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k25
  cron: '8 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k25

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k25-ko26
  cron: '25 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k25-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k25-ko27
  cron: '35 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k25-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k26
  cron: '46 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k26-ko26
  cron: '35 4 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k26-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k26-ko27
  cron: '21 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k26-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k27
  cron: '40 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k27-ko27
  cron: '32 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k27-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23
  cron: '43 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko26
  cron: '2 22 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko27
  cron: '20 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k24
  cron: '24 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k24

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k24-ko26
  cron: '6 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k24-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k24-ko27
  cron: '48 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k24-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k25
  cron: '22 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k25

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k25-ko26
  cron: '35 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k25-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k25-ko27
  cron: '57 5 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k25-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k26
  cron: '52 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k26-ko26
  cron: '37 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k26-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k26-ko27
  cron: '59 3 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k26-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k27
  cron: '6 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k27-ko27
  cron: '2 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k27-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23
  cron: '53 23 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko26
  cron: '40 19 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko27
  cron: '10 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k24
  cron: '58 12 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k24

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k24-ko26
  cron: '12 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k24-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k24-ko27
  cron: '42 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k24-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k25
  cron: '4 2 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k25

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k25-ko26
  cron: '41 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k25-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k25-ko27
  cron: '39 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k25-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k26
  cron: '22 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k26-ko26
  cron: '35 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k26-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k26-ko27
  cron: '29 22 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k26-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k27
  cron: '52 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k27-ko27
  cron: '20 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k27-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23
  cron: '31 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko26
  cron: '38 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko27
  cron: '8 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k24
  cron: '48 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k24

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k24-ko26
  cron: '14 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k24-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k24-ko27
  cron: '0 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k24-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k25
  cron: '18 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k25

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k25-ko26
  cron: '55 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k25-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k25-ko27
  cron: '17 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k25-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k26
  cron: '20 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k26-ko26
  cron: '33 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k26-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k26-ko27
  cron: '59 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k26-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k27
  cron: '42 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k27-ko27
  cron: '2 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k27-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23
  cron: '38 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-ko26
  cron: '49 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-ko27
  cron: '39 12 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k24
  cron: '5 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k24

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k24-ko26
  cron: '25 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k24-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k24-ko27
  cron: '27 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k24-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k25
  cron: '11 1 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k25

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k25-ko26
  cron: '40 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k25-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k25-ko27
  cron: '18 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k25-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k26
  cron: '53 3 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k26-ko26
  cron: '50 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k26-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k26-ko27
  cron: '24 7 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k26-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k27
  cron: '39 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k27-ko27
  cron: '13 10 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k27-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23
  cron: '26 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko26
  cron: '56 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko27
  cron: '50 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k24
  cron: '53 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k24

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k24-ko26
  cron: '32 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k24-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k24-ko27
  cron: '38 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k24-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k25
  cron: '47 8 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k25

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k25-ko26
  cron: '57 12 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k25-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k25-ko27
  cron: '23 10 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k25-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k26
  cron: '37 2 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k26-ko26
  cron: '51 10 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k26-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k26-ko27
  cron: '13 12 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k26-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k27
  cron: '39 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k27-ko27
  cron: '12 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k27-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23
  cron: '55 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko26
  cron: '21 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko27
  cron: '35 18 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k24
  cron: '48 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k24

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k24-ko26
  cron: '37 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k24-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k24-ko27
  cron: '47 10 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k24-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k25
  cron: '42 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k25

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k25-ko26
  cron: '4 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k25-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k25-ko27
  cron: '38 23 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k25-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k26
  cron: '28 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k26-ko26
  cron: '42 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k26-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k26-ko27
  cron: '4 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k26-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k27
  cron: '22 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k27-ko27
  cron: '13 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k27-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23
  cron: '58 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko26
  cron: '52 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko27
  cron: '26 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k24
  cron: '33 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k24

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k24-ko26
  cron: '20 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k24-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k24-ko27
  cron: '2 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k24-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k25
  cron: '27 19 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k25

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k25-ko26
  cron: '57 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k25-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k25-ko27
  cron: '59 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k25-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k26
  cron: '21 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k26-ko26
  cron: '7 16 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k26-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k26-ko27
  cron: '25 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k26-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k27
  cron: '51 7 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k27-ko27
  cron: '8 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k27-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23
  cron: '15 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko26
  cron: '33 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko27
  cron: '27 22 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k24
  cron: '8 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k24

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k24-ko26
  cron: '9 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k24-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k24-ko27
  cron: '23 22 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k24-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k25
  cron: '26 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k25

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k25-ko26
  cron: '40 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k25-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k25-ko27
  cron: '10 11 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k25-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k26
  cron: '16 23 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k26-ko26
  cron: '26 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k26-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k26-ko27
  cron: '4 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k26-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k27
  cron: '50 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k27-ko27
  cron: '1 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k27-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23
  cron: '1 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko26
  cron: '35 14 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko27
  cron: '25 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k24
  cron: '22 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k24

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k24-ko26
  cron: '11 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k24-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k24-ko27
  cron: '45 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k24-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k25
  cron: '44 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k25

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k25-ko26
  cron: '42 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k25-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k25-ko27
  cron: '32 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k25-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k26
  cron: '2 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k26-ko26
  cron: '8 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k26-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k26-ko27
  cron: '22 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k26-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k27
  cron: '24 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k27-ko27
  cron: '43 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k27-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23
  cron: '20 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko26
  cron: '0 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko27
  cron: '14 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k24
  cron: '43 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k24

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k24-ko26
  cron: '20 9 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k24-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k24-ko27
  cron: '50 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k24-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k25
  cron: '57 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k25

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k25-ko26
  cron: '45 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k25-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k25-ko27
  cron: '39 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k25-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k26
  cron: '31 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k26-ko26
  cron: '23 10 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k26-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k26-ko27
  cron: '25 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k26-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k27
  cron: '1 10 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k27-ko27
  cron: '56 1 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-etcd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k27-ko27

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k23
  cron: '7 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k23

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k23-ko26
  cron: '6 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k23-ko26

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k23-ko27
  cron: '44 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k23-ko27

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k24
  cron: '4 13 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k24

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k24-ko26
  cron: '26 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k24-ko26

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k24-ko27
  cron: '48 10 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k24-ko27

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k25
  cron: '26 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k25

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k25-ko26
  cron: '19 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k25-ko26

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k25-ko27
  cron: '5 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k25-ko27

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k26
  cron: '12 17 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k26

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k26-ko26
  cron: '29 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k26-ko26

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k26-ko27
  cron: '27 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k26-ko27

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k27
  cron: '10 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k27

# {"cloud": "aws", "distro": "amzn2", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-amzn2-k27-ko27
  cron: '14 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-amzn2-k27-ko27

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k23
  cron: '6 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k23

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k23-ko26
  cron: '27 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k23-ko26

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k23-ko27
  cron: '5 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k23-ko27

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k24
  cron: '57 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k24

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k24-ko26
  cron: '15 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k24-ko26

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k24-ko27
  cron: '45 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k24-ko27

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k25
  cron: '59 10 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k25

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k25-ko26
  cron: '26 12 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k25-ko26

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k25-ko27
  cron: '16 2 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k25-ko27

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k26
  cron: '49 0 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k26

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k26-ko26
  cron: '28 2 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k26-ko26

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k26-ko27
  cron: '38 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k26-ko27

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k27
  cron: '7 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k27

# {"cloud": "aws", "distro": "deb10", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-deb10-k27-ko27
  cron: '39 1 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-deb10-k27-ko27

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k23
  cron: '33 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k23

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k23-ko26
  cron: '8 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k23-ko26

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k23-ko27
  cron: '26 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k23-ko27

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k24
  cron: '18 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k24

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k24-ko26
  cron: '24 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k24-ko26

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k24-ko27
  cron: '6 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k24-ko27

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k25
  cron: '4 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k25

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k25-ko26
  cron: '57 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k25-ko26

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k25-ko27
  cron: '43 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k25-ko27

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k26
  cron: '54 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k26

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k26-ko26
  cron: '31 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k26-ko26

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k26-ko27
  cron: '25 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k26-ko27

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k27
  cron: '40 11 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k27

# {"cloud": "aws", "distro": "flatcar", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-flatcar-k27-ko27
  cron: '16 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-flatcar-k27-ko27

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k23
  cron: '10 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k23

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k23-ko26
  cron: '23 21 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k23-ko26

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k23-ko27
  cron: '5 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k23-ko27

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k24
  cron: '1 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k24

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k24-ko26
  cron: '39 13 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k24-ko26

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k24-ko27
  cron: '21 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k24-ko27

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k25
  cron: '27 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k25

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k25-ko26
  cron: '18 8 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k25-ko26

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k25-ko27
  cron: '28 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k25-ko27

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k26
  cron: '37 12 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k26

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k26-ko26
  cron: '52 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k26-ko26

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k26-ko27
  cron: '46 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k26-ko27

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k27
  cron: '35 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k27

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-rhel8-k27-ko27
  cron: '27 21 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-rhel8-k27-ko27

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k23
  cron: '12 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k23

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k23-ko26
  cron: '45 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k23-ko26

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k23-ko27
  cron: '43 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k23-ko27

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k24
  cron: '7 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k24

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k24-ko26
  cron: '37 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k24-ko26

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k24-ko27
  cron: '47 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k24-ko27

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k25
  cron: '53 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k25

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k25-ko26
  cron: '16 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k25-ko26

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k25-ko27
  cron: '54 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k25-ko27

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k26
  cron: '19 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k26

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k26-ko26
  cron: '26 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k26-ko26

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k26-ko27
  cron: '48 14 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k26-ko27

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k27
  cron: '49 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k27

# {"cloud": "aws", "distro": "u2004", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2004-k27-ko27
  cron: '17 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2004-k27-ko27

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k23
  cron: '29 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k23

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k23-ko26
  cron: '2 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k23-ko26

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k23-ko27
  cron: '12 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k23-ko27

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k24
  cron: '42 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k24

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k24-ko26
  cron: '18 12 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k24-ko26

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k24-ko27
  cron: '52 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k24-ko27

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k25
  cron: '16 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k25

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k25-ko26
  cron: '47 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k25-ko26

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k25-ko27
  cron: '13 7 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k25-ko27

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k26
  cron: '2 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k26

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k26-ko26
  cron: '49 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k26-ko26

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k26-ko27
  cron: '15 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k26-ko27

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k27
  cron: '36 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k27

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--node-size=t3.large", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "cilium-eni"}
- name: e2e-kops-grid-cilium-eni-u2204-k27-ko27
  cron: '6 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=cilium-eni --node-size=t3.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --node-size=t3.large
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: cilium-eni
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-eni-u2204-k27-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23
  cron: '41 15 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko26
  cron: '53 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko27
  cron: '55 0 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k24
  cron: '2 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k24

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k24-ko26
  cron: '41 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k24-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k24-ko27
  cron: '39 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k24-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k25
  cron: '28 2 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k25

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k25-ko26
  cron: '36 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k25-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k25-ko27
  cron: '14 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k25-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k26
  cron: '46 0 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k26-ko26
  cron: '22 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k26-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k26-ko27
  cron: '0 11 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k26-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k27
  cron: '4 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k27-ko27
  cron: '53 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k27-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23
  cron: '20 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko26
  cron: '16 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko27
  cron: '14 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k24
  cron: '19 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k24

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k24-ko26
  cron: '36 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k24-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k24-ko27
  cron: '30 13 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k24-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k25
  cron: '25 3 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k25

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k25-ko26
  cron: '49 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k25-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k25-ko27
  cron: '19 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k25-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k26
  cron: '47 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k26-ko26
  cron: '7 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k26-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k26-ko27
  cron: '37 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k26-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k27
  cron: '25 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k27-ko27
  cron: '40 3 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k27-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23
  cron: '21 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko26
  cron: '1 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko27
  cron: '39 20 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k24
  cron: '50 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k24

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k24-ko26
  cron: '45 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k24-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k24-ko27
  cron: '59 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k24-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k25
  cron: '8 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k25

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k25-ko26
  cron: '56 23 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k25-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k25-ko27
  cron: '14 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k25-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k26
  cron: '54 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k26-ko26
  cron: '2 17 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k26-ko26

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k26-ko27
  cron: '44 23 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k26-ko27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k27
  cron: '12 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k27

# {"cloud": "aws", "distro": "flatcar", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k27-ko27
  cron: '53 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3602.1.1-hvm' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-flatcar, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k27-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23
  cron: '8 10 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko26
  cron: '48 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko27
  cron: '22 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k24
  cron: '7 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k24

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k24-ko26
  cron: '16 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k24-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k24-ko27
  cron: '18 9 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k24-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k25
  cron: '49 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k25

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k25-ko26
  cron: '37 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k25-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k25-ko27
  cron: '7 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k25-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k26
  cron: '7 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k26-ko26
  cron: '7 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k26-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k26-ko27
  cron: '41 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k26-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k27
  cron: '5 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k27-ko27
  cron: '36 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k27-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23
  cron: '58 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko26
  cron: '34 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko27
  cron: '0 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k24
  cron: '9 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k24

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k24-ko26
  cron: '6 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k24-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k24-ko27
  cron: '32 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k24-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k25
  cron: '23 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k25

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k25-ko26
  cron: '27 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k25-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k25-ko27
  cron: '29 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k25-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k26
  cron: '13 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k26-ko26
  cron: '1 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k26-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k26-ko27
  cron: '59 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k26-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k27
  cron: '55 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k27-ko27
  cron: '54 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k27-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23
  cron: '47 9 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko26
  cron: '1 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko27
  cron: '31 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k24
  cron: '12 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k24

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k24-ko26
  cron: '25 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k24-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k24-ko27
  cron: '11 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k24-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k25
  cron: '14 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k25

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k25-ko26
  cron: '8 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k25-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k25-ko27
  cron: '58 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k25-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k26
  cron: '56 22 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k26-ko26
  cron: '22 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k26-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k26-ko27
  cron: '32 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k26-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k27
  cron: '42 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k27-ko27
  cron: '5 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=flannel" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k27-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23
  cron: '55 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko26
  cron: '22 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko27
  cron: '16 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k24
  cron: '32 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k24

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k24-ko26
  cron: '22 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k24-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k24-ko27
  cron: '12 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k24-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k25
  cron: '10 12 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k25

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k25-ko26
  cron: '47 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k25-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k25-ko27
  cron: '29 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k25-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k26
  cron: '12 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k26-ko26
  cron: '1 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k26-ko26

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k26-ko27
  cron: '27 12 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k26-ko27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k27
  cron: '50 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k27

# {"cloud": "aws", "distro": "amzn2", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k27-ko27
  cron: '14 9 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20230612.0-x86_64-gp2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-amzn2, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k27-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23
  cron: '42 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko26
  cron: '7 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko27
  cron: '57 10 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k24
  cron: '17 3 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k24

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k24-ko26
  cron: '59 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k24-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k24-ko27
  cron: '1 2 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k24-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k25
  cron: '3 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k25

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k25-ko26
  cron: '42 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k25-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k25-ko27
  cron: '8 23 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k25-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k26
  cron: '37 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k26-ko26
  cron: '20 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k26-ko26

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k26-ko27
  cron: '2 1 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k26-ko27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k27
  cron: '15 17 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k27

# {"cloud": "aws", "distro": "deb10", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k27-ko27
  cron: '35 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20230601-1398' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-deb10, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k27-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23
  cron: '26 12 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko26
  cron: '27 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko27
  cron: '29 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k24
  cron: '1 15 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k24

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k24-ko26
  cron: '43 16 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k24-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k24-ko27
  cron: '17 22 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k24-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k25
  cron: '7 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k25

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k25-ko26
  cron: '2 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k25-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k25-ko27
  cron: '40 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k25-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k26
  cron: '5 3 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k26-ko26
  cron: '16 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k26-ko26

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k26-ko27
  cron: '34 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k26-ko27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k27
  cron: '19 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k27

# {"cloud": "aws", "distro": "rhel8", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k27-ko27
  cron: '31 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.8.0_HVM-20230503-x86_64-54-Hourly2-GP2' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-rhel8, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k27-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23
  cron: '44 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko26
  cron: '49 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko27
  cron: '19 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k24
  cron: '19 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k24

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k24-ko26
  cron: '5 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k24-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k24-ko27
  cron: '27 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k24-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k25
  cron: '21 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k25

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k25-ko26
  cron: '48 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k25-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k25-ko27
  cron: '34 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k25-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k26
  cron: '3 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k26-ko26
  cron: '30 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k26-ko26

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k26-ko27
  cron: '36 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k26-ko27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k27
  cron: '13 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k27

# {"cloud": "aws", "distro": "u2004", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k27-ko27
  cron: '33 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230616' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2004, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k27-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23
  cron: '21 23 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko26
  cron: '22 9 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko27
  cron: '0 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k24
  cron: '2 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k24

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k24-ko26
  cron: '14 9 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k24-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k24-ko27
  cron: '36 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k24-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k25
  cron: '8 18 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k25

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k25-ko26
  cron: '7 12 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k25-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k25-ko27
  cron: '25 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.25, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k25-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k26
  cron: '10 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.26", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k26-ko26
  cron: '21 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.26/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.26'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.26, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k26-ko26

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k26-ko27
  cron: '3 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.26, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k26-ko27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k27
  cron: '8 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k27

# {"cloud": "aws", "distro": "u2204", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": "1.27", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k27-ko27
  cron: '26 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230623' --channel=alpha --networking=kopeio" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.27/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.27'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.27, kops-distro-u2204, kops-grid, kops-k8s-1.27, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k27-ko27

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-kubenet-u2004-k23
  cron: '46 1-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-kubenet-u2004-k23

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-kubenet-u2004-k24
  cron: '1 2-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-kubenet-u2004-k24

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-kubenet-u2004-k25
  cron: '3 4-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-kubenet-u2004-k25

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-kubenet-u2004-k26
  cron: '45 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-kubenet-u2004-k26

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-kubenet-u2004-k27
  cron: '31 0-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-kubenet-u2004-k27

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k23
  cron: '0 5-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k23

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k24
  cron: '3 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k24

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k25
  cron: '41 0-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k25

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k26
  cron: '27 2-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k26

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k27
  cron: '33 4-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k27

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k23
  cron: '46 7-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k23

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k24
  cron: '25 4-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k24

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k25
  cron: '31 2-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k25

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k26
  cron: '53 0-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k26

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k27
  cron: '43 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k27

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "gce"}
- name: e2e-kops-grid-gce-gce-u2004-k23
  cron: '31 5-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=gce --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-gce-u2004-k23

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "gce"}
- name: e2e-kops-grid-gce-gce-u2004-k24
  cron: '36 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=gce --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-gce-u2004-k24

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "gce"}
- name: e2e-kops-grid-gce-gce-u2004-k25
  cron: '46 0-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=gce --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-gce-u2004-k25

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.26", "kops_channel": "alpha", "kops_version": null, "networking": "gce"}
- name: e2e-kops-grid-gce-gce-u2004-k26
  cron: '32 2-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=gce --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.26.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.26.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.26'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.26, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-gce-u2004-k26

# {"cloud": "gce", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.27", "kops_channel": "alpha", "kops_version": null, "networking": "gce"}
- name: e2e-kops-grid-gce-gce-u2004-k27
  cron: '34 4-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=gce --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.27.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.27.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.27'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.27, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-gce-u2004-k27
