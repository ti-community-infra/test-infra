presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-containerd-gce
    always_run: false
    optional: true
    skip_branches:
    - release-\d+\.\d+   # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-create-test-group: "true"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=105
        - --scenario=kubernetes_e2e
        - --
        - --build=quick
        - --cluster=
        - --extract=local
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-containerd-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[NodeFeature:RuntimeHandler\] --minStartupPods=8
        - --timeout=80m     # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        resources:
          requests:
            memory: "6Gi"
        securityContext:
          privileged: true
  - name: pull-kubernetes-node-e2e-containerd
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    always_run: true
    optional: false
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-node-e2e-containerd-ec2
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-e2e-containerd-ec2: "true"
    path_alias: k8s.io/kubernetes
    always_run: false # flip after tests are green
    optional: true # flip after tests are green
    cluster: eks-prow-build-cluster
    max_concurrency: 50
    decorate: true
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
        workdir: true
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: NodeConformance
            - name: TEST_ARGS
              value: '--container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-kubernetes-node-arm64-e2e-containerd-ec2
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    path_alias: k8s.io/kubernetes
    always_run: false # flip after tests are green
    optional: true # flip after tests are green
    cluster: eks-prow-build-cluster
    max_concurrency: 50
    decorate: true
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
        workdir: true
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: NodeConformance
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-arm64.yaml
            - name: TEST_ARGS
              value: '--container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-kubernetes-node-arm64-e2e-containerd-serial-ec2
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    path_alias: k8s.io/kubernetes
    always_run: false # flip after tests are green
    optional: true # flip after tests are green
    cluster: eks-prow-build-cluster
    max_concurrency: 50
    decorate: true
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
        workdir: true
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: SKIP
              value: \[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-arm64.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: pull-kubernetes-node-arm64-ubuntu-serial-gce
    # this is functional duplicated with `pull-kubernetes-node-arm64-e2e-containerd-serial-ec2`, consider to remove one of them when either of them is green
    skip_branches:
    - release-\d+\.\d+  # per-release image
    always_run: false
    optional: true
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
      - org: kubernetes
        repo: test-infra
        base_ref: master
        path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
    annotations:
      fork-per-release: "true"
      testgrid-create-test-group: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-num-failures-to-alert: "10"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-experimental
        command:
        - runner.sh
        args:
          - kubetest2
          - noop
          - --test=node
          - --
          - --repo-root=.
          - --gcp-zone=us-central1-a
          - --parallelism=1
          - --focus-regex=\[Serial\]
          - --use-dockerized-build=true
          - --target-build-arch=linux/arm64
          - --skip-regex=\[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]
          - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/arm/image-config-serial.yaml
        securityContext:
          privileged: true
        env:
          - name: GOPATH
            value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-node-e2e-containerd-kubetest2
    always_run: false
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 65m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    spec:
      containers:
      # experimental have the kubetest2 binaries
      # https://github.com/kubernetes/test-infra/blob/3c3d64f398a5e4f324200d25183c98a4bfa842ac/images/kubekins-e2e/variants.yaml#L8
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-experimental
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
  - name: pull-kubernetes-node-e2e-containerd-features
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-create-test-group: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --service-account=/etc/service-account/service-account.json
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/image-config.yaml
        - --deployment=node
        - --gcp-zone=us-central1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:.+\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-node-e2e-containerd-features-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-e2e-containerd-features-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    decoration_config:
      timeout: 65m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-create-test-group: "true"
    spec:
      containers:
      # experimental have the kubetest2 binaries
      # https://github.com/kubernetes/test-infra/blob/3c3d64f398a5e4f324200d25183c98a4bfa842ac/images/kubekins-e2e/variants.yaml#L8
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-experimental
        env:
        - name: GOPATH
          value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-central1-b
        - --parallelism=8
        - --focus-regex=\[NodeFeature:.+\]
        - --skip-regex=\[Flaky\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --image-config-file=/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/image-config.yaml
        - --image-config-dir=/home/prow
  - name: pull-kubernetes-node-e2e-containerd-alpha-features
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-containerd-alpha-features
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --service-account=/etc/service-account/service-account.json
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/image-config.yaml
        - --deployment=node
        - --gcp-zone=us-central1-b
        - '--node-test-args=--feature-gates=AllAlpha=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:.+\]|\[NodeAlphaFeature:.+\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-kubelet-serial-containerd
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-containerd
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - --timeout=260
          - --root=/go/src
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - --scenario=kubernetes_e2e
          - --
          - --deployment=node
          - --gcp-zone=us-west1-b
          - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
          - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          - --node-tests=true
          - --provider=gce
          - --test_args=--nodes=1 --timeout=4h --focus="\[Serial\]" --skip="\[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]"
          - --timeout=240m
          env:
          - name: GOPATH
            value: /go
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-kubernetes-node-kubelet-serial-containerd-kubetest2
    # explicitly needs /test pull-kubernetes-node-kubelet-serial-containerd-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-containerd-kubetest2
    spec:
      containers:
      # experimental have the kubetest2 binaries
      # https://github.com/kubernetes/test-infra/blob/3c3d64f398a5e4f324200d25183c98a4bfa842ac/images/kubekins-e2e/variants.yaml#L8
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-experimental
        env:
        - name: GOPATH
          value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Serial\]
        - --skip-regex=\[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]
        - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
  - name: pull-kubernetes-node-kubelet-serial-cpu-manager
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-cpu-manager
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          args:
            - --repo=k8s.io/kubernetes=$(PULL_REFS)
            - --repo=k8s.io/release
            - --timeout=240
            - --root=/go/src
            - --scenario=kubernetes_e2e
            - --
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-serial-cpu-manager.yaml
            - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --skip="" --focus="\[Feature:CPUManager\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
  - name: pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-cpu-manager-kubetest2
    spec:
      containers:
      # experimental have the kubetest2 binaries
      # https://github.com/kubernetes/test-infra/blob/3c3d64f398a5e4f324200d25183c98a4bfa842ac/images/kubekins-e2e/variants.yaml#L8
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-experimental
        env:
        - name: GOPATH
          value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Feature:CPUManager\]
        - --test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/image-config-serial-cpu-manager.yaml
  - name: pull-kubernetes-node-kubelet-serial-topology-manager
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-topology-manager
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          args:
            - --repo=k8s.io/kubernetes=$(PULL_REFS)
            - --repo=k8s.io/release
            - --timeout=240
            - --root=/go/src
            - --scenario=kubernetes_e2e
            - --
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-serial-multi-numa.yaml
            - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --skip="" --focus="\[Feature:TopologyManager\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
  - name: pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-topology-manager-kubetest2
    spec:
      containers:
      # experimental have the kubetest2 binaries
      # https://github.com/kubernetes/test-infra/blob/3c3d64f398a5e4f324200d25183c98a4bfa842ac/images/kubekins-e2e/variants.yaml#L8
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-experimental
        env:
        - name: GOPATH
          value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Feature:TopologyManager\]
        - --test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/image-config-serial-multi-numa.yaml
  - name: pull-kubernetes-node-kubelet-serial-hugepages
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-hugepages
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          args:
            - --repo=k8s.io/kubernetes=$(PULL_REFS)
            - --repo=k8s.io/release
            - --timeout=240
            - --root=/go/src
            - --scenario=kubernetes_e2e
            - --
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-serial-hugepages.yaml
            - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --skip="" --focus="\[Feature:HugePages\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
  - name: pull-kubernetes-node-crio-cgrpv2-e2e
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-gce-e2e
    always_run: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=240"
        - --scenario=kubernetes_e2e
        - -- # end bootstrap args, scenario args below
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=180m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/crio/latest/image-config-cgrpv2-k8s-infra-prow-build.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
  - name: pull-kubernetes-node-crio-cgrpv1-evented-pleg-e2e
    cluster: k8s-infra-prow-build
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv1-evented-pleg-gce-e2e
    always_run: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          args:
            - --root=/go/src
            - "--job=$(JOB_NAME)"
            - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
            - "--service-account=/etc/service-account/service-account.json"
            - "--upload=gs://kubernetes-jenkins/pr-logs"
            - "--timeout=240"
            - --scenario=kubernetes_e2e
            - -- # end bootstrap args, scenario args below
            - --deployment=node
            - --env=KUBE_SSH_USER=core
            - --gcp-zone=us-west1-b
            - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service --feature-gates=EventedPLEG=true" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
            - --timeout=180m
            - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/crio/latest/image-config-cgrpv1-evented-pleg.yaml
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          env:
            - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
              value: "1"
  - name: pull-kubernetes-node-crio-cgrpv2-e2e-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-crio-cgrpv2-e2e-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-gce-e2e-kubetest2
    spec:
      containers:
      # experimental have the kubetest2 binaries
      # https://github.com/kubernetes/test-infra/blob/3c3d64f398a5e4f324200d25183c98a4bfa842ac/images/kubekins-e2e/variants.yaml#L8
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-experimental
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgrpv2-k8s-infra-prow-build-kubetest2.yaml
  - name: pull-kubernetes-node-kubelet-serial-crio-cgroupv1
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-crio-cgroupv1
    always_run: false
    optional: true
    skip_report: false
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=440"
        - --scenario=kubernetes_e2e
        - -- # end bootstrap args, scenario args below
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --env=KUBE_SSH_KEY_PATH=/etc/ssh-key-secret/ssh-private
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --focus="\[Serial\]" --skip="\[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]"
        - --timeout=420m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/crio/latest/image-config-cgrpv1-serial.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
  - name: pull-kubernetes-node-kubelet-serial-crio-cgroupv2
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-crio-cgroupv2
    always_run: false
    optional: true
    skip_report: false
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=440"
        - --scenario=kubernetes_e2e
        - -- # end bootstrap args, scenario args below
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --env=KUBE_SSH_KEY_PATH=/etc/ssh-key-secret/ssh-private
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --focus="\[Serial\]" --skip="\[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]"
        - --timeout=420m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/crio/latest/image-config-cgrpv2-serial.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
  - name: pull-kubernetes-node-crio-e2e
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-crio-gce-e2e
    always_run: false
    skip_report: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=240"
        - --scenario=kubernetes_e2e
        - -- # end bootstrap args, scenario args below
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=180m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/crio/latest/image-config-cgrpv1-k8s-infra-prow-build.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
  - name: pull-kubernetes-node-crio-e2e-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-crio-e2e-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-crio-gce-e2e-kubetest2
    spec:
      containers:
      # experimental have the kubetest2 binaries
      # https://github.com/kubernetes/test-infra/blob/3c3d64f398a5e4f324200d25183c98a4bfa842ac/images/kubekins-e2e/variants.yaml#L8
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-experimental
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgrpv1-k8s-infra-prow-build-kubetest2.yaml
  - name: pull-kubernetes-node-kubelet-serial-memory-manager
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-memory-manager
      description: Executes memory manager e2e node tests
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          args:
            - --repo=k8s.io/kubernetes=$(PULL_REFS)
            - --repo=k8s.io/release
            - --timeout=240
            - --root=/go/src
            - --scenario=kubernetes_e2e
            - --
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-serial-multi-numa.yaml
            - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --skip="" --focus="\[Feature:MemoryManager\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go

  - name: pull-kubernetes-node-memoryqos-cgrpv2
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-memoryqos-cgrpv2
    always_run: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=240"
        - --scenario=kubernetes_e2e
        - -- # end bootstrap args, scenario args below
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates=MemoryQoS=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=180m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/crio/latest/image-config-cgrpv2.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-swap-fedora
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-swap-fedora
    always_run: false
    skip_report: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=240"
        - --scenario=kubernetes_e2e
        - -- # end bootstrap args, scenario args below
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates=NodeSwap=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-swap-on=false --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=180m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/swap/image-config-swap-fedora.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-swap-ubuntu-serial
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-swap-ubuntu-serial
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          args:
            - --root=/go/src
            - "--job=$(JOB_NAME)"
            - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
            - "--service-account=/etc/service-account/service-account.json"
            - "--upload=gs://kubernetes-jenkins/pr-logs"
            - "--timeout=240"
            - --scenario=kubernetes_e2e
            - --
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/swap/image-config-swap.yaml
            - '--node-test-args=--feature-gates=NodeSwap=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --fail-swap-on=false --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --focus="\[Serial\]" --skip="\[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi

  - name: pull-kubernetes-node-swap-fedora-serial
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-swap-fedora-serial
    always_run: false
    skip_report: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=240"
        - --scenario=kubernetes_e2e
        - -- # end bootstrap args, scenario args below
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates=NodeSwap=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-swap-on=false --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --focus="\[Serial\]" --skip="\[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]"
        - --timeout=180m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/swap/image-config-swap-fedora.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"

  - name: pull-kubernetes-node-kubelet-credential-provider
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    run_if_changed: '^(pkg\/credential\/provider\/|test\/e2e_node\/plugins\/gcp-credential-provider)'
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-credential-provider
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
          - --root=/go/src
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=240"
          - --scenario=kubernetes_e2e
          - -- # end bootstrap args, scenario args below
          - --deployment=node
          - --gcp-zone=us-west1-b
          - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
          - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--feature-gates=DisableKubeletCloudCredentialProviders=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          - --node-tests=true
          - --provider=gce
          - --test_args=--nodes=1 --focus="\[Feature:KubeletCredentialProviders\]" --skip="\[Flaky\]|\[Serial\]"
          - --timeout=180m
        env:
          - name: GOPATH
            value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi

  # This jobs runs e2e.test with a focus on tests for the Dynamic Resource Allocation feature (currently alpha)
  # on a kind cluster with containerd updated to a version with CDI support.
  - name: pull-kubernetes-kind-dra
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-crio-dra
    decorate: true
    # Not relevant for most PRs.
    always_run: false
    # This covers most of the code related to dynamic resource allocation.
    run_if_changed: /dra/|/dynamicresources/|/resourceclaim/|/resourceclass/|/podscheduling/|/resourceclaimtemplate/|/dynamic-resource-allocation/|/pkg/apis/resource/|/api/resource/
    # The tests might still be flaky or this job might get triggered accidentally for
    # an unrelated PR.
    optional: true
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        command:
        - runner.sh
        args:
        - /bin/sh
        - -xc
        - >
          make WHAT="github.com/onsi/ginkgo/v2/ginkgo k8s.io/kubernetes/test/e2e/e2e.test" &&
          curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" kind &&
          kind build node-image --image=dra/node:latest . &&
          trap 'kind export logs "${ARTIFACTS}/kind"; kind delete cluster' EXIT &&
          kind create cluster --retain --config test/e2e/dra/kind.yaml --image dra/node:latest &&
          KUBERNETES_PROVIDER=local KUBECONFIG=${HOME}/.kube/config GINKGO_PARALLEL_NODES=8 E2E_REPORT_DIR=${ARTIFACTS} hack/ginkgo-e2e.sh -ginkgo.focus=DynamicResourceAllocation

        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m

  - name: pull-kubernetes-e2e-gce-kubelet-credential-provider
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    run_if_changed: '^(pkg\/credential\/provider\/|test\/e2e_node\/plugins\/gcp-credential-provider)'
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-cluster-e2e-credential-provider
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
          - --root=/go/src
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--repo=k8s.io/release"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=240"
          - --scenario=kubernetes_e2e
          - -- # end bootstrap args, scenario args below
          - --build=quick
          - --extract=local
          - --cluster=
          - --env=ENABLE_AUTH_PROVIDER_GCP=true
          - --env=KUBE_FEATURE_GATES=DisableKubeletCloudCredentialProviders=true
          - --gcp-zone=us-west1-b
          - --gcp-node-image=gci
          - --gcp-nodes=1
          - --provider=gce
          - --ginkgo-parallel=10
          - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-kubelet-credential-provider
          - --test_args=--ginkgo.focus=\[Feature:KubeletCredentialProviders\]
          - --timeout=180m
        env:
          - name: GOPATH
            value: /go
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv2-containerd-node-e2e-features
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv2-containerd-node-e2e-features
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=200
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/image-config-cgroupv2.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv2-containerd-node-e2e
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv2-containerd-node-e2e
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=200
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/image-config-cgroupv2.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=180m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv2-containerd-node-e2e-serial
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv2-containerd-node-e2e-serial
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=260
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/image-config-cgroupv2-serial.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --timeout=4h --focus="\[Serial\]" --skip="\[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]"
        - --timeout=240m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv2-containerd-node-e2e-eviction
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv2-containerd-node-e2e-eviction
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=320
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/image-config-serial-eviction.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --timeout=300m --focus="\[NodeFeature:Eviction\]"
        - --timeout=300m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv1-containerd-node-e2e
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv1-containerd-node-e2e
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv1/image-config-cgroupv1.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv1-containerd-node-e2e-features
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv1-containerd-node-e2e-features
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv1/image-config-cgroupv1.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  #TODO(vinaykul,InPlacePodVerticalScaling): Remove this job once we have updated to a COS OS with containerd >= 1.6.9
  #     Until then, this job complements pull-kubernetes-e2e-gce-cos-alpha-features by running inplace pod resize e2e tests
  #     full-spectrum against containerd/main which has the necessary CRI support.
  - name: pull-kubernetes-e2e-inplace-pod-resize-containerd-main-v2
    optional: true
    always_run: false
    run_if_changed: 'test/e2e/node/pod_resize.go|pkg/kubelet/kubelet.go|pkg/kubelet/kubelet_pods.go|pkg/kubelet/kuberuntime/kuberuntime_manager.go'
    skip_report: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-cluster-e2e-inplace-pod-resize-containerd-main-v2
      description: Executes inplace pod resize e2e tests with containerd/main and cgroupv2
    spec:
      containers:
      - args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --repo=github.com/containerd/containerd=main
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=180
        - --scenario=kubernetes_e2e
        - -- # end bootstrap args, scenario args below
        - --ginkgo-parallel=1
        - --build=quick
        - --cluster=
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd containerd-installation
        - --env=KUBE_FEATURE_GATES=InPlacePodVerticalScaling=true
        - --env=KUBE_MASTER_EXTRA_METADATA=user-data=/go/src/github.com/containerd/containerd/test/e2e/master.yaml,containerd-configure-sh=/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/env-cgroupv2
        - --env=KUBE_NODE_EXTRA_METADATA=user-data=/go/src/github.com/containerd/containerd/test/e2e/node.yaml,containerd-configure-sh=/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/env-cgroupv2
        - --env=KUBELET_TEST_ARGS=--runtime-cgroups=/system.slice/containerd.service --cgroup-driver=systemd
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --provider=gce
        - --gcp-nodes=1
        - --runtime-config=api/all=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-inplace-pod-resize-containerd-main-v2
        - --test_args=--ginkgo.focus=\[Feature:InPlacePodVerticalScaling\]
        - --timeout=150m
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        securityContext:
          privileged: true
  - name: pull-kubernetes-node-kubelet-serial-pod-disruption-conditions
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-pod-disruption-conditions
      description: Executes pod disruption conditions e2e node tests
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
     containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          args:
            - --root=/go/src
            - "--job=$(JOB_NAME)"
            - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
            - "--upload=gs://kubernetes-jenkins/pr-logs"
            - --service-account=/etc/service-account/service-account.json
            - --timeout=240
            - --scenario=kubernetes_e2e
            - --
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/image-config-serial-eviction.yaml
            - '--node-test-args=--feature-gates=PodDisruptionConditions=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --timeout=180m --skip="" --focus="\[NodeFeature:PodDisruptionConditions\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go

  - name: pull-kubernetes-node-e2e-containerd-standalone-mode-all-alpha
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-containerd-standalone-mode-all-alpha
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --service-account=/etc/service-account/service-account.json
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
        - --deployment=node
        - --gcp-zone=us-central1-b
        - '--node-test-args=--standalone-mode=true --feature-gates=AllAlpha=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[Feature:StandaloneMode\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-e2e-containerd-standalone-mode
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-containerd-standalone-mode
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/containerd=main
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --service-account=/etc/service-account/service-account.json
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
        - --deployment=node
        - --gcp-zone=us-central1-b
        - '--node-test-args=--standalone-mode=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[Feature:StandaloneMode\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  # TODO(gjkim42, SidecarContainers): Remove this once SidecarContainers
  # graduates to beta.
  - name: pull-kubernetes-node-e2e-containerd-sidecar-containers
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-containerd-sidecar-containers
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --service-account=/etc/service-account/service-account.json
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-zone=us-central1-b
        - '--node-test-args=--feature-gates=SidecarContainers=true --service-feature-gates=SidecarContainers=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:SidecarContainers\]|\[NodeAlphaFeature:SidecarContainers\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-e2e-crio-dra
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    always_run: false
    run_if_changed: /dra/|/dynamicresources/|/resourceclaim/|/resourceclass/|/podscheduling/|/resourceclaimtemplate/|/dynamic-resource-allocation/|/pkg/apis/resource/|/api/resource/|/test/e2e_node/dra_test.go
    optional: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-crio-dra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --service-account=/etc/service-account/service-account.json
        - --timeout=90
        - --scenario=kubernetes_e2e
        - -- # end bootstrap args, scenario args below
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates="DynamicResourceAllocation=true" --service-feature-gates="DynamicResourceAllocation=true" --runtime-config=resource.k8s.io/v1alpha2=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--focus="\[Feature:DynamicResourceAllocation\]" --skip="\[Flaky\]"
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/crio/latest/image-config-cgrpv1-serial.yaml
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  kubernetes-sigs/provider-aws-test-infra:
    - name: pull-kubernetes-node-e2e-containerd-ec2-canary
      # duplicate job of in the k/k repo to test changes in provider-aws-test-infra repo
      annotations:
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      labels:
        preset-e2e-containerd-ec2: "true"
      path_alias: sigs.k8s.io/provider-aws-test-infra
      always_run: true
      optional: false
      cluster: eks-prow-build-cluster
      decorate: true
      extra_refs:
        - org: kubernetes
          repo: kubernetes
          base_ref: master
          path_alias: k8s.io/kubernetes
      spec:
        serviceAccountName: node-e2e-tests
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
            command:
              - runner.sh
            args:
              - hack/make-rules/test-e2e-node.sh
            env:
              - name: FOCUS
                value: NodeConformance
              - name: TEST_ARGS
                value: '--container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-node-arm64-e2e-containerd-ec2-canary
      # duplicate job of in the k/k repo to test changes in provider-aws-test-infra repo
      annotations:
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      labels:
        preset-e2e-containerd-ec2: "true"
        preset-dind-enabled: "true"
      path_alias: sigs.k8s.io/provider-aws-test-infra
      always_run: true
      optional: false
      cluster: eks-prow-build-cluster
      decorate: true
      extra_refs:
        - org: kubernetes
          repo: kubernetes
          base_ref: master
          path_alias: k8s.io/kubernetes
      spec:
        serviceAccountName: node-e2e-tests
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
            command:
              - runner.sh
            args:
              - hack/make-rules/test-e2e-node.sh
            env:
              - name: FOCUS
                value: NodeConformance
              - name: USE_DOCKERIZED_BUILD
                value: "true"
              - name: TARGET_BUILD_ARCH
                value: "linux/arm64"
              - name: IMAGE_CONFIG_FILE
                value: aws-instance-arm64.yaml
              - name: TEST_ARGS
                value: '--container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-node-e2e-containerd-serial-ec2-canary
      # duplicate job of in the k/k repo to test changes in provider-aws-test-infra repo
      annotations:
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      labels:
        preset-e2e-containerd-ec2: "true"
      path_alias: sigs.k8s.io/provider-aws-test-infra
      always_run: true
      optional: false
      cluster: eks-prow-build-cluster
      decorate: true
      extra_refs:
        - org: kubernetes
          repo: kubernetes
          base_ref: master
          path_alias: k8s.io/kubernetes
      spec:
        serviceAccountName: node-e2e-tests
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
            command:
              - runner.sh
            args:
              - hack/make-rules/test-e2e-node.sh
            env:
              - name: FOCUS
                value: \[Serial\]
              - name: SKIP
                value: \[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]
              - name: TEST_ARGS
                value: '--kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            resources:
              limits:
                cpu: 8
                memory: 10Gi
              requests:
                cpu: 8
                memory: 10Gi
    - name: pull-kubernetes-node-arm64-e2e-containerd-serial-ec2-canary
      # duplicate job of in the k/k repo to test changes in provider-aws-test-infra repo
      annotations:
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      labels:
        preset-e2e-containerd-ec2: "true"
        preset-dind-enabled: "true"
      path_alias: sigs.k8s.io/provider-aws-test-infra
      always_run: true
      optional: false
      cluster: eks-prow-build-cluster
      decorate: true
      extra_refs:
        - org: kubernetes
          repo: kubernetes
          base_ref: master
          path_alias: k8s.io/kubernetes
      spec:
        serviceAccountName: node-e2e-tests
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-master
            command:
              - runner.sh
            args:
              - hack/make-rules/test-e2e-node.sh
            env:
              - name: FOCUS
                value: \[Serial\]
              - name: SKIP
                value: \[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]
              - name: USE_DOCKERIZED_BUILD
                value: "true"
              - name: TARGET_BUILD_ARCH
                value: "linux/arm64"
              - name: IMAGE_CONFIG_FILE
                value: aws-instance-arm64.yaml
              - name: TEST_ARGS
                value: '--kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              limits:
                cpu: 8
                memory: 10Gi
              requests:
                cpu: 8
                memory: 10Gi
