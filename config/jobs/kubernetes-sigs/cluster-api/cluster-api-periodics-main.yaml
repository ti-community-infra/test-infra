periodics:
- name: periodic-cluster-api-test-main
  interval: 2h
  decorate: true
  decoration_config:
    gcs_credentials_secret: "" # Use workload identity for uploading artifacts
  rerun_auth_config:
    github_team_slugs:
    - org: kubernetes-sigs
      slug: cluster-api-maintainers
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-1.27
      command:
      - runner.sh
      - ./scripts/ci-test.sh
      resources:
        requests:
          cpu: 7300m
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api
    testgrid-tab-name: capi-test-main
    testgrid-alert-email: sig-cluster-lifecycle-cluster-api-alerts@kubernetes.io
    testgrid-num-failures-to-alert: "4"
- name: periodic-cluster-api-test-mink8s-main
  interval: 2h
  decorate: true
  decoration_config:
    gcs_credentials_secret: "" # Use workload identity for uploading artifacts
  rerun_auth_config:
    github_team_slugs:
    - org: kubernetes-sigs
      slug: cluster-api-maintainers
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-1.27
      command:
      - runner.sh
      - ./scripts/ci-test.sh
      env:
      # This value determines the minimum Kubernetes
      # supported version for Cluster API management cluster
      # and can be found by referring to [Supported Kubernetes Version](https://cluster-api.sigs.k8s.io/reference/versions.html#supported-kubernetes-versions)
      # docs (look for minimum supported k8s version for management cluster, i.e N-3).
      #
      # To check the latest available envtest in Kubebuilder for the minor version we determined above, please
      # refer to https://github.com/kubernetes-sigs/kubebuilder/tree/tools-releases.
      - name: KUBEBUILDER_ENVTEST_KUBERNETES_VERSION
        value: "1.24.2"
      resources:
        requests:
          cpu: 7300m
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api
    testgrid-tab-name: capi-test-mink8s-main
    testgrid-alert-email: sig-cluster-lifecycle-cluster-api-alerts@kubernetes.io
    testgrid-num-failures-to-alert: "4"
- name: periodic-cluster-api-e2e-main
  interval: 2h
  decorate: true
  decoration_config:
    gcs_credentials_secret: "" # Use workload identity for uploading artifacts
  rerun_auth_config:
    github_team_slugs:
    - org: kubernetes-sigs
      slug: cluster-api-maintainers
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-1.27
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          - name: GINKGO_SKIP
            value: "\\[Conformance\\] \\[K8s-Upgrade\\]|\\[IPv6\\]|\\[Scale\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api
    testgrid-tab-name: capi-e2e-main
    testgrid-alert-email: sig-cluster-lifecycle-cluster-api-alerts@kubernetes.io
    testgrid-num-failures-to-alert: "4"
- name: periodic-cluster-api-e2e-dualstack-and-ipv6-main
  interval: 2h
  decorate: true
  decoration_config:
    gcs_credentials_secret: "" # Use workload identity for uploading artifacts
  rerun_auth_config:
    github_team_slugs:
      - org: kubernetes-sigs
        slug: cluster-api-maintainers
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-1.27
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          # enable IPV6 in bootstrap image
          - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
            value: "true"
          - name: GINKGO_SKIP
            value: "\\[Conformance\\] \\[K8s-Upgrade\\]|\\[Scale\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api
    testgrid-tab-name: capi-e2e-dualstack-and-ipv6-main
    testgrid-alert-email: sig-cluster-lifecycle-cluster-api-alerts@kubernetes.io
    testgrid-num-failures-to-alert: "4"
- name: periodic-cluster-api-e2e-mink8s-main
  interval: 2h
  decorate: true
  decoration_config:
    gcs_credentials_secret: "" # Use workload identity for uploading artifacts
  rerun_auth_config:
    github_team_slugs:
    - org: kubernetes-sigs
      slug: cluster-api-maintainers
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230616-e730b60769-1.27
      args:
      - runner.sh
      - "./scripts/ci-e2e.sh"
      env:
      - name: GINKGO_SKIP
        value: "\\[Conformance\\] \\[K8s-Upgrade\\]|\\[IPv6\\]|\\[Scale\\]"
      # This value determines the minimum Kubernetes
      # supported version for Cluster API management cluster.
      - name: KUBERNETES_VERSION_MANAGEMENT
        value: "v1.24.15"
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 7300m
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api
    testgrid-tab-name: capi-e2e-mink8s-main
    testgrid-alert-email: sig-cluster-lifecycle-cluster-api-alerts@kubernetes.io
    testgrid-num-failures-to-alert: "4"
