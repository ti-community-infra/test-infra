package(default_visibility = ["//prow:__subpackages__"])

load("//prow:def.bzl", "BUILD_CLUSTER", "MULTI_KIND", "component", "release")
load("//def:configmap.bzl", "k8s_configmap")

# Usage:
#   bazel run //config/prow/cluster:foo.apply

release(
    "production",
    component("crier", "deployment", "rbac", "service"),
    component("deck", "service", "deployment", "rbac"),
    component("gce-ssd-retain", "storageclass"),
    component("ghproxy", MULTI_KIND),
    component("hook", "service", "deployment", "rbac"),
    component("horologium", "deployment", "rbac", "service"),
    component("ing", "ingress"),
    component("kube-state-metrics", "deployment", "rbac", "service"),
    component("kubernetes-external-secrets", "deployment", "rbac", "service", "crd"),
    component("needs-rebase", "deployment"),
    component("pipeline", "deployment", "rbac"),
    component("prow_controller_manager", "service", "deployment", "rbac"),
    component("prow-canary-k8s-io", "managedcertificate"),
    component("prow-k8s-io", "managedcertificate"),
    component("prow-kubernetes-io", "managedcertificate"),
    component("pushgateway", "deployment"),
    component("sinker", "service", "deployment", "rbac"),
    component("statusreconciler", "deployment", "rbac"),
    component("tide", "service", "deployment", "rbac"),
    component("tls-ing", "ingress"),
    component("trusted_serviceaccounts", MULTI_KIND),
    component("kubernetes_external_secrets", MULTI_KIND),
    component("cherrypicker", "deployment", "service"),
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//config/prow/cluster/build:all-srcs",
        "//config/prow/cluster/monitoring:all-srcs",
        "//config/prow/cluster/prowjob-crd/legacy:all-srcs",
        "//config/prow/cluster/starter:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)
